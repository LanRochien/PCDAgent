{
    "auto_summary.py": [
        {
            "type": "FunctionDef",
            "name": "output_markdown",
            "md_content": [
                "**output_markdown**: output_markdown \u51fd\u6570\u7684\u529f\u80fd\u662f\u9012\u5f52\u904d\u5386\u76ee\u5f55\u7ed3\u6784\u5e76\u751f\u6210Markdown\u683c\u5f0f\u7684\u76ee\u5f55\u6811\u6587\u6863\u3002\n\n**\u53c2\u6570(parameters)**:  \n\u00b7 dire: \u5f53\u524d\u5904\u7406\u7684\u76ee\u5f55\u8def\u5f84  \n\u00b7 base_dir: \u57fa\u51c6\u76ee\u5f55\u8def\u5f84\uff0c\u7528\u4e8e\u8ba1\u7b97\u76f8\u5bf9\u8def\u5f84  \n\u00b7 output_file: \u8f93\u51fa\u6587\u4ef6\u5bf9\u8c61\uff0c\u7528\u4e8e\u5199\u5165\u751f\u6210\u7684\u76ee\u5f55\u5185\u5bb9  \n\u00b7 append: \u5e03\u5c14\u6807\u5fd7\uff0c\u63a7\u5236\u662f\u5426\u8ffd\u52a0\u6a21\u5f0f\u4e0b\u7684\u6587\u4ef6\u540d\u5904\u7406  \n\u00b7 iter_depth: \u5f53\u524d\u8fed\u4ee3\u6df1\u5ea6\uff0c\u7528\u4e8e\u63a7\u5236\u7f29\u8fdb\u5c42\u7ea7\uff08\u9ed8\u8ba4\u503c0\uff09\n\n**\u4ee3\u7801\u63cf\u8ff0**:  \n\u8be5\u51fd\u6570\u901a\u8fc7\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u7b97\u6cd5\u5904\u7406\u76ee\u5f55\u7ed3\u6784\uff0c\u5176\u6838\u5fc3\u903b\u8f91\u5206\u4e3a\u76ee\u5f55\u5904\u7406\u548c\u6587\u4ef6\u5904\u7406\u4e24\u90e8\u5206\uff1a  \n1. **\u76ee\u5f55\u5904\u7406**\uff1a  \n   - \u4f7f\u7528sort_dir_file\u5bf9\u76ee\u5f55\u5185\u5bb9\u8fdb\u884c\u6392\u5e8f\uff08\u6587\u4ef6\u4f18\u5148\u4e8e\u76ee\u5f55\uff0c\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\uff09  \n   - \u901a\u8fc7mdfile_in_dir\u5224\u65ad\u76ee\u5f55\u662f\u5426\u5305\u542b.md/.markdown\u6587\u4ef6  \n   - \u82e5\u5305\u542b\u5219\u5199\u5165\u5e26\u7f29\u8fdb\u7684\u76ee\u5f55\u9879\uff0c\u5e76\u9012\u5f52\u8c03\u7528\u81ea\u8eab\u5904\u7406\u5b50\u76ee\u5f55\uff08iter_depth+1\u5b9e\u73b0\u5c42\u7ea7\u7f29\u8fdb\uff09  \n\n2. **\u6587\u4ef6\u5904\u7406**\uff1a  \n   - \u901a\u8fc7is_markdown_file\u9a8c\u8bc1\u662f\u5426\u4e3aMarkdown\u6587\u4ef6  \n   - \u6392\u9664\u6839\u76ee\u5f55\u4e0b\u7684SUMMARY.md\u548cSUMMARY-GitBook-auto-summary.md\u6587\u4ef6  \n   - \u4f7f\u7528write_md_filename\u83b7\u53d6\u663e\u793a\u6587\u4ef6\u540d\uff08\u5728append\u6a21\u5f0f\u4e0b\u4f1a\u5c1d\u8bd5\u5339\u914d\u5386\u53f2\u8bb0\u5f55\uff09  \n   - \u751f\u6210\u5e26\u76f8\u5bf9\u8def\u5f84\u7684Markdown\u94fe\u63a5\u683c\u5f0f  \n\n\u5728\u9879\u76ee\u8c03\u7528\u5173\u7cfb\u4e2d\uff1a  \n- **\u88ab\u8c03\u7528**\uff1a\u7531main\u51fd\u6570\u542f\u52a8\uff0c\u4f20\u5165GitBook\u6839\u76ee\u5f55\u53c2\u6570\u4f5c\u4e3a\u521d\u59cbdire\u548cbase_dir  \n- **\u8c03\u7528**\uff1asort_dir_file\u3001mdfile_in_dir\u3001is_markdown_file\u3001write_md_filename\u56db\u4e2a\u8f85\u52a9\u51fd\u6570  \n- **\u9012\u5f52\u8c03\u7528**\uff1a\u81ea\u8eab\u5b9e\u73b0\u76ee\u5f55\u6811\u7684\u6df1\u5ea6\u904d\u5386  \n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. \u9012\u5f52\u6df1\u5ea6iter_depth\u76f4\u63a5\u5f71\u54cd\u8f93\u51fa\u7f29\u8fdb\u91cf\uff08\u6bcf\u5c42\u589e\u52a0\u4e24\u4e2a\u7a7a\u683c\uff09  \n2. \u6839\u76ee\u5f55(iter_depth=0)\u4f1a\u4e3b\u52a8\u6392\u9664SUMMARY.md\u6587\u4ef6  \n3. \u76ee\u5f55\u6392\u5e8f\u91c7\u7528\"\u6587\u4ef6\u4f18\u5148\u4e8e\u76ee\u5f55\uff0c\u5404\u6309\u5b57\u6bcd\u5e8f\"\u7684\u89c4\u5219  \n4. append\u6a21\u5f0f\u4f9d\u8d56\u5168\u5c40\u53d8\u91cfformer_summary_list\uff0c\u9700\u786e\u4fdd\u5728main\u4e2d\u5df2\u521d\u59cb\u5316  \n5. \u8f93\u51fa\u683c\u5f0f\u517c\u5bb9GitBook\u7684SUMMARY.md\u89c4\u8303\uff0c\u751f\u6210\u7ed3\u679c\u53ef\u76f4\u63a5\u7528\u4e8e\u6587\u6863\u5bfc\u822a  \n6. \u6587\u4ef6\u8def\u5f84\u5904\u7406\u4f7f\u7528os.path.relpath\u4fdd\u8bc1\u76f8\u5bf9\u8def\u5f84\u7684\u6b63\u786e\u6027  \n7. \u51fd\u6570\u6267\u884c\u4f1a\u4ea7\u751f\u63a7\u5236\u53f0\u65e5\u5fd7\u8f93\u51fa\uff08Processing...\u63d0\u793a\uff09"
            ],
            "code_start_line": 11,
            "code_end_line": 39,
            "params": [
                "dire",
                "base_dir",
                "output_file",
                "append",
                "iter_depth"
            ],
            "have_return": false,
            "code_content": "def output_markdown(dire, base_dir, output_file, append, iter_depth=0):\n    \"\"\"Main iterator for get information from every file/folder\n\n    i: directory, base directory(to calulate relative path),\n       output file name, iter depth.\n    p: Judge is directory or is file, then process .md/.markdown files.\n    o: write .md information (with identation) to output_file.\n    \"\"\"\n    for filename in sort_dir_file(os.listdir(dire), base_dir):\n        # add list and sort\n        print('Processing ', filename)  # output log\n        file_or_path = os.path.join(dire, filename)\n        if os.path.isdir(file_or_path):  # is dir\n            if mdfile_in_dir(file_or_path):\n                # if there is .md files in the folder, output folder name\n                output_file.write('  ' * iter_depth + '- ' + filename + '\\n')\n                output_markdown(file_or_path, base_dir, output_file, append,\n                                iter_depth + 1)  # iteration\n        else:  # is file\n            if is_markdown_file(filename):\n                # re to find target markdown files, $ for matching end of filename\n                if (filename not in ['SUMMARY.md',\n                                     'SUMMARY-GitBook-auto-summary.md']\n                        or iter_depth != 0):  # escape SUMMARY.md at base directory\n                    output_file.write('  ' * iter_depth +\n                                      '- [{}]({})\\n'.format(write_md_filename(filename,\n                                                                              append),\n                                                            os.path.join(os.path.relpath(dire, base_dir),\n                                                                         filename)))\n",
            "name_column": 4,
            "who_reference_me": [
                "main"
            ],
            "reference_who": [
                "mdfile_in_dir",
                "is_markdown_file",
                "sort_dir_file",
                "write_md_filename"
            ],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "mdfile_in_dir",
            "md_content": [
                "**mdfile_in_dir**:  mdfile_in_dir \u51fd\u6570\u7684\u529f\u80fd\u662f\u68c0\u6d4b\u6307\u5b9a\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\u4e2d\u662f\u5426\u5b58\u5728\u6269\u5c55\u540d\u4e3a.md\u6216.markdown\u7684\u6587\u4ef6\u3002\n\n**\u53c2\u6570(parameters)**:  \n\u00b7 dire: \u9700\u8981\u68c0\u6d4b\u7684\u76ee\u6807\u76ee\u5f55\u8def\u5f84\uff0c\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\n\n**\u4ee3\u7801\u63cf\u8ff0**:  \n\u8be5\u51fd\u6570\u901a\u8fc7os.walk(dire)\u9012\u5f52\u904d\u5386\u76ee\u6807\u76ee\u5f55\u7ed3\u6784\uff0c\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u6587\u4ef6\u540d\u540e\u7f00\u3002\u5f53\u53d1\u73b0\u4efb\u4f55\u4ee5.md\u6216.markdown\u7ed3\u5c3e\u7684\u6587\u4ef6\u65f6\u7acb\u5373\u8fd4\u56deTrue\uff0c\u5426\u5219\u5728\u5b8c\u6574\u904d\u5386\u76ee\u5f55\u6811\u540e\u8fd4\u56deFalse\u3002\u5728\u9879\u76ee\u4e2d\uff0c\u8be5\u51fd\u6570\u88aboutput_markdown\u51fd\u6570\u8c03\u7528\uff0c\u7528\u4e8e\u5224\u65ad\u662f\u5426\u9700\u8981\u5bf9\u5b50\u76ee\u5f55\u8fdb\u884c\u9012\u5f52\u5904\u7406\uff1a\u5f53\u76ee\u5f55\u5305\u542bmarkdown\u6587\u4ef6\u65f6\uff0coutput_markdown\u4f1a\u8f93\u51fa\u8be5\u76ee\u5f55\u540d\u79f0\u5e76\u7ee7\u7eed\u8fed\u4ee3\uff1b\u82e5\u65e0\u5219\u8df3\u8fc7\u8be5\u76ee\u5f55\uff0c\u907f\u514d\u751f\u6210\u7a7a\u76ee\u5f55\u6761\u76ee\u3002\n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. \u6b63\u5219\u8868\u8fbe\u5f0f'.md$|.markdown$'\u4e2d\u7684\u70b9\u53f7(.)\u5728\u6b63\u5219\u8bed\u6cd5\u4e2d\u5339\u914d\u4efb\u610f\u5b57\u7b26\uff0c\u53ef\u80fd\u4ea7\u751f\u8bef\u5339\u914d\uff08\u5982\"mdfile\"\u4e5f\u4f1a\u88ab\u5339\u914d\uff09\u3002\u5efa\u8bae\u4fee\u6539\u4e3a\u8f6c\u4e49\u8868\u8fbe\u5f0f'\\\\.md$|\\\\.markdown$'\u4ee5\u7cbe\u786e\u5339\u914d\u6587\u4ef6\u6269\u5c55\u540d\n2. \u51fd\u6570\u6267\u884c\u6548\u7387\u4e0e\u76ee\u5f55\u89c4\u6a21\u76f4\u63a5\u76f8\u5173\uff0c\u5bf9\u4e8e\u6df1\u5c42\u5d4c\u5957\u7684\u5927\u578b\u76ee\u5f55\u7ed3\u6784\u53ef\u80fd\u5b58\u5728\u6027\u80fd\u95ee\u9898\n3. \u4f9d\u8d56os\u6a21\u5757\u7684\u76ee\u5f55\u8bbf\u95ee\u6743\u9650\uff0c\u82e5\u76ee\u5f55\u4e0d\u53ef\u8bfb\u5c06\u5f15\u53d1\u5f02\u5e38\n\n**\u8f93\u51fa\u793a\u4f8b**:  \n\u5f53\u68c0\u6d4b\u5230\u5b58\u5728README.md\u6587\u4ef6\u65f6\u8fd4\u56de\uff1a  \nTrue  \n\u5f53\u76ee\u5f55\u4e2d\u4ec5\u5b58\u5728.txt\u6587\u4ef6\u65f6\u8fd4\u56de\uff1a  \nFalse"
            ],
            "code_start_line": 43,
            "code_end_line": 53,
            "params": [
                "dire"
            ],
            "have_return": true,
            "code_content": "def mdfile_in_dir(dire):\n    \"\"\"Judge if there is .md file in the directory\n\n    i: input directory\n    o: return Ture if there is .md file; False if not.\n    \"\"\"\n    for root, dirs, files in os.walk(dire):\n        for filename in files:\n            if re.search('.md$|.markdown$', filename):\n                return True\n    return False\n",
            "name_column": 4,
            "who_reference_me": [
                "output_markdown"
            ],
            "reference_who": [],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "is_markdown_file",
            "md_content": [
                "**is_markdown_file**: is_markdown_file \u51fd\u6570\u7684\u529f\u80fd\u662f\u5224\u65ad\u7ed9\u5b9a\u6587\u4ef6\u540d\u662f\u5426\u4e3a\u5408\u6cd5\u7684Markdown\u6587\u4ef6\uff0c\u5e76\u8fd4\u56de\u53bb\u9664\u6269\u5c55\u540d\u540e\u7684\u7eaf\u6587\u4ef6\u540d\u3002\n\n**\u53c2\u6570(parameters)**:  \n\u00b7 filename: \u9700\u8981\u88ab\u9a8c\u8bc1\u7684\u5b8c\u6574\u6587\u4ef6\u540d\uff08\u5305\u542b\u6269\u5c55\u540d\uff09\n\n**\u4ee3\u7801\u63cf\u8ff0**:  \n\u8be5\u51fd\u6570\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u9a8c\u8bc1\u8f93\u5165\u6587\u4ef6\u540d\u7684\u6269\u5c55\u540d\u662f\u5426\u4e3a`.md`\u6216`.markdown`\u3002\u5177\u4f53\u6d41\u7a0b\uff1a  \n1. \u4f7f\u7528`re.search()`\u68c0\u67e5filename\u662f\u5426\u4ee5`.md`\u6216`.markdown`\u7ed3\u5c3e  \n2. \u82e5\u65e0\u5339\u914d\u5219\u8fd4\u56deFalse  \n3. \u82e5\u5339\u914d\u6210\u529f\u5219\u901a\u8fc7\u5b57\u7b26\u4e32\u5207\u7247\u64cd\u4f5c\u79fb\u9664\u6269\u5c55\u540d\uff08.md\u79fb\u96643\u5b57\u7b26\uff0c.markdown\u79fb\u96649\u5b57\u7b26\uff09  \n4. \u8fd4\u56de\u53bb\u9664\u6269\u5c55\u540d\u540e\u7684\u7eaf\u6587\u4ef6\u540d  \n\n\u5728\u9879\u76ee\u4e2d\u88ab`output_markdown()`\u548c`write_md_filename()`\u8c03\u7528\uff1a  \n- \u5728`output_markdown()`\u4e2d\u7528\u4e8e\u8fc7\u6ee4\u76ee\u5f55\u8fed\u4ee3\u65f6\u7684\u975eMarkdown\u6587\u4ef6  \n- \u5728`write_md_filename()`\u4e2d\u4f5c\u4e3a\u6587\u4ef6\u540d\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u5f53append=False\u65f6\u76f4\u63a5\u8fd4\u56de\u5904\u7406\u7ed3\u679c  \n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. \u8be5\u51fd\u6570\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199\uff0c\u65e0\u6cd5\u8bc6\u522b.MD/.Markdown\u7b49\u5927\u5199\u6269\u5c55\u540d  \n2. \u5bf9\u4e8e\u591a\u5c42\u6269\u5c55\u540d\uff08\u5982file.en.md\uff09\u4f1a\u8fd4\u56defile.en  \n3. \u51fd\u6570\u8fd4\u56de\u503c\u4e3a\u5b57\u7b26\u4e32\u6216\u5e03\u5c14\u503c\uff0c\u8c03\u7528\u65f6\u9700\u6ce8\u610f\u7c7b\u578b\u5224\u65ad  \n4. \u5339\u914d\u903b\u8f91\u57fa\u4e8e\u6587\u4ef6\u540d\u7ed3\u5c3e\uff0c\u4e2d\u95f4\u51fa\u73b0\u7684.md\uff08\u5982md_file.txt\uff09\u4e0d\u4f1a\u88ab\u8bc6\u522b  \n\n**\u8f93\u51fa\u793a\u4f8b**:  \n\u00b7 \u8f93\u5165\"readme.md\" \u2192 \u8fd4\u56de\"readme\"  \n\u00b7 \u8f93\u5165\"notes.markdown\" \u2192 \u8fd4\u56de\"notes\"  \n\u00b7 \u8f93\u5165\"image.png\" \u2192 \u8fd4\u56deFalse"
            ],
            "code_start_line": 56,
            "code_end_line": 68,
            "params": [
                "filename"
            ],
            "have_return": true,
            "code_content": "def is_markdown_file(filename):\n    \"\"\" Judge if the filename is a markdown filename\n\n    i: filename\n    o: filename without '.md' or '.markdown'\n    \"\"\"\n    match = re.search('.md$|.markdown$', filename)\n    if not match:\n        return False\n    elif len(match.group()) is len('.md'):\n        return filename[:-3]\n    elif len(match.group()) is len('.markdown'):\n        return filename[:-9]\n",
            "name_column": 4,
            "who_reference_me": [
                "output_markdown",
                "write_md_filename"
            ],
            "reference_who": [],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "sort_dir_file",
            "md_content": [
                "**sort_dir_file**: sort_dir_file \u51fd\u6570\u7684\u529f\u80fd\u662f\u5c06\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u4e0e\u5b50\u76ee\u5f55\u5206\u79bb\uff0c\u5e76\u6309\u539f\u987a\u5e8f\u4f18\u5148\u5217\u51fa\u6587\u4ef6\uff0c\u540e\u8ffd\u52a0\u5b50\u76ee\u5f55\u3002\n\n**\u53c2\u6570(parameters)**:  \n\u00b7 listdir: \u9700\u8981\u6392\u5e8f\u7684\u76ee\u5f55\u6761\u76ee\u5217\u8868\uff08\u901a\u5e38\u901a\u8fc7 `os.listdir()` \u83b7\u53d6\uff09\u3002  \n\u00b7 dire: \u76ee\u6807\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u7528\u4e8e\u62fc\u63a5\u5b8c\u6574\u8def\u5f84\u4ee5\u5224\u65ad\u6761\u76ee\u7c7b\u578b\u3002  \n\n**\u4ee3\u7801\u63cf\u8ff0**:  \n\u8be5\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u76ee\u5f55\u6761\u76ee\u5217\u8868 `listdir` \u548c\u76ee\u5f55\u8def\u5f84 `dire`\uff0c\u901a\u8fc7\u904d\u5386\u6761\u76ee\u5217\u8868\u5b8c\u6210\u4ee5\u4e0b\u64cd\u4f5c\uff1a  \n1. **\u5206\u79bb\u6587\u4ef6\u4e0e\u76ee\u5f55**\uff1a\u5229\u7528 `os.path.isdir(os.path.join(dire, filename))` \u5224\u65ad\u6bcf\u4e2a\u6761\u76ee\u662f\u6587\u4ef6\u8fd8\u662f\u76ee\u5f55\uff0c\u5206\u522b\u5b58\u5165 `list_of_file` \u548c `list_of_dir`\u3002  \n2. **\u5408\u5e76\u5217\u8868**\uff1a\u5c06\u76ee\u5f55\u5217\u8868 `list_of_dir` \u4e2d\u7684\u5143\u7d20\u9010\u4e2a\u8ffd\u52a0\u5230\u6587\u4ef6\u5217\u8868 `list_of_file` \u7684\u672b\u5c3e\u3002  \n3. **\u8fd4\u56de\u7ed3\u679c**\uff1a\u6700\u7ec8\u8fd4\u56de\u5408\u5e76\u540e\u7684\u5217\u8868\uff0c\u6587\u4ef6\u5728\u524d\uff08\u4fdd\u6301\u539f\u59cb\u987a\u5e8f\uff09\uff0c\u76ee\u5f55\u5728\u540e\uff08\u4fdd\u6301\u539f\u59cb\u987a\u5e8f\uff09\u3002  \n\n\u5728\u9879\u76ee\u4e2d\uff0c`output_markdown` \u51fd\u6570\u8c03\u7528\u6b64\u51fd\u6570\u5904\u7406\u76ee\u5f55\u5185\u5bb9\uff0c\u4ee5\u5b9e\u73b0\u6309\u6587\u4ef6\u4f18\u5148\u3001\u76ee\u5f55\u5176\u6b21\u7684\u987a\u5e8f\u904d\u5386\u6761\u76ee\u3002\u4f46\u9700\u6ce8\u610f\uff1a**\u5f53\u524d\u5b9e\u73b0\u672a\u5bf9\u6587\u4ef6\u548c\u76ee\u5f55\u8fdb\u884c\u5b57\u6bcd\u6392\u5e8f**\uff0c\u4e0e\u51fd\u6570\u6ce8\u91ca\u63cf\u8ff0\u7684\u9884\u671f\u884c\u4e3a\u5b58\u5728\u5dee\u5f02\u3002\u8c03\u7528\u65f6\u4f20\u9012\u7684 `dire` \u53c2\u6570\u5e94\u4e3a\u5f53\u524d\u5904\u7406\u7684\u76ee\u5f55\u8def\u5f84\uff0c\u4f46\u5728\u5b9e\u9645\u8c03\u7528\u4e2d\u9519\u8bef\u4f20\u5165\u4e86 `base_dir`\uff08\u57fa\u7840\u76ee\u5f55\u8def\u5f84\uff09\uff0c\u53ef\u80fd\u5bfc\u81f4\u8def\u5f84\u62fc\u63a5\u9519\u8bef\uff0c\u5f71\u54cd\u6761\u76ee\u7c7b\u578b\u5224\u65ad\u7684\u51c6\u786e\u6027\u3002\n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. \u51fd\u6570\u672a\u5bf9\u6587\u4ef6\u548c\u76ee\u5f55\u6309\u5b57\u6bcd\u6392\u5e8f\uff0c\u5b9e\u9645\u8f93\u51fa\u987a\u5e8f\u4e0e `listdir` \u7684\u539f\u59cb\u987a\u5e8f\u4e00\u81f4\u3002  \n2. \u53c2\u6570 `dire` \u5fc5\u987b\u4e3a\u5f53\u524d\u5904\u7406\u76ee\u5f55\u7684\u771f\u5b9e\u8def\u5f84\uff08\u800c\u975e `base_dir`\uff09\uff0c\u5426\u5219 `os.path.isdir` \u7684\u5224\u5b9a\u4f1a\u56e0\u8def\u5f84\u9519\u8bef\u5931\u6548\u3002  \n3. \u82e5\u9700\u5b9e\u73b0\u6ce8\u91ca\u63cf\u8ff0\u7684\u6392\u5e8f\u903b\u8f91\uff0c\u9700\u5728\u8ffd\u52a0\u76ee\u5f55\u524d\u5bf9 `list_of_file` \u548c `list_of_dir` \u5206\u522b\u6267\u884c\u6309\u5b57\u6bcd\u6392\u5e8f\u64cd\u4f5c\u3002  \n\n**\u8f93\u51fa\u793a\u4f8b**:  \n\u5047\u8bbe\u8f93\u5165 `listdir=['b.txt', 'a_dir', 'a.txt', 'b_dir']` \u4e14 `dire` \u6b63\u786e\u6307\u5411\u5176\u6240\u5728\u76ee\u5f55\uff0c\u5219\u8f93\u51fa\u4e3a\uff1a  \n`['b.txt', 'a.txt', 'a_dir', 'b_dir']`\uff08\u6587\u4ef6\u4e0e\u76ee\u5f55\u5747\u4fdd\u6301\u539f\u59cb\u987a\u5e8f\uff0c\u672a\u6309\u5b57\u6bcd\u6392\u5e8f\uff09\u3002"
            ],
            "code_start_line": 71,
            "code_end_line": 82,
            "params": [
                "listdir",
                "dire"
            ],
            "have_return": true,
            "code_content": "def sort_dir_file(listdir, dire):\n    # sort dirs and files, first files a-z, then dirs a-z\n    list_of_file = []\n    list_of_dir = []\n    for filename in listdir:\n        if os.path.isdir(os.path.join(dire, filename)):\n            list_of_dir.append(filename)\n        else:\n            list_of_file.append(filename)\n    for dire in list_of_dir:\n        list_of_file.append(dire)\n    return list_of_file\n",
            "name_column": 4,
            "who_reference_me": [
                "output_markdown"
            ],
            "reference_who": [],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "write_md_filename",
            "md_content": [
                "**write_md_filename**: \u8be5\u51fd\u6570\u7528\u4e8e\u5904\u7406Markdown\u6587\u4ef6\u540d\u5e76\u6839\u636e\u6a21\u5f0f\u51b3\u5b9a\u8fd4\u56de\u683c\u5f0f\u3002\n\n**\u53c2\u6570(parameters)**:  \n\u00b7 filename: \u9700\u8981\u5904\u7406\u7684\u6587\u4ef6\u540d\uff08\u5b57\u7b26\u4e32\u7c7b\u578b\uff09  \n\u00b7 append: \u5e03\u5c14\u503c\uff0c\u63a7\u5236\u662f\u5426\u4ece\u5386\u53f2\u5217\u8868\u4e2d\u68c0\u7d22\u6587\u4ef6\u540d  \n\n**\u4ee3\u7801\u63cf\u8ff0**:  \n\u6b64\u51fd\u6570\u6838\u5fc3\u529f\u80fd\u5206\u4e3a\u4e24\u79cd\u6a21\u5f0f\uff1a  \n1. **\u8ffd\u52a0\u6a21\u5f0f\uff08append=True\uff09**:  \n   \u904d\u5386\u5168\u5c40\u53d8\u91cf `former_summary_list`\uff0c\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5305\u542b\u76ee\u6807\u6587\u4ef6\u540d\u7684\u884c\u3002\u82e5\u5339\u914d\u6210\u529f\uff0c\u5219\u63d0\u53d6\u8be5\u884c\u4e2d `[\u663e\u793a\u6587\u672c](\u94fe\u63a5)` \u7ed3\u6784\u7684\u663e\u793a\u6587\u672c\u90e8\u5206\uff08\u5373\u4e2d\u62ec\u53f7\u5185\u7684\u5185\u5bb9\uff09\u3002\u82e5\u672a\u627e\u5230\u5339\u914d\u9879\uff0c\u5219\u8c03\u7528 `is_markdown_file` \u9a8c\u8bc1\u5e76\u5904\u7406\u6587\u4ef6\u540d\u3002  \n2. **\u76f4\u63a5\u6a21\u5f0f\uff08append=False\uff09**:  \n   \u76f4\u63a5\u8c03\u7528 `is_markdown_file` \u9a8c\u8bc1\u5e76\u5904\u7406\u6587\u4ef6\u540d\u3002  \n\n\u5728\u9879\u76ee\u4e2d\u88ab `output_markdown` \u51fd\u6570\u8c03\u7528\uff0c\u7528\u4e8e\u751f\u6210Markdown\u76ee\u5f55\u6761\u76ee\u4e2d\u7684\u663e\u793a\u6587\u672c\u3002\u5176\u4f9d\u8d56\u7684 `is_markdown_file` \u51fd\u6570\u4f1a\u79fb\u9664 `.md` \u6216 `.markdown` \u540e\u7f00\uff0c\u8fd4\u56de\u7eaf\u6587\u4ef6\u540d\uff08\u82e5\u9a8c\u8bc1\u5931\u8d25\u5219\u8fd4\u56de `False`\uff09\u3002\n\n**\u6ce8\u610f\u4e8b\u9879**:  \n- \u4f9d\u8d56\u5168\u5c40\u53d8\u91cf `former_summary_list` \u7684\u5b58\u5728\uff0c\u5176\u6570\u636e\u7ed3\u6784\u5e94\u4e3a\u5305\u542b\u5386\u53f2\u76ee\u5f55\u6761\u76ee\u7684\u5b57\u7b26\u4e32\u5217\u8868  \n- \u6b63\u5219\u8868\u8fbe\u5f0f `re.search('\\[.*\\]\\(', line)` \u53ef\u80fd\u5b58\u5728\u8fc7\u5ea6\u5339\u914d\u98ce\u9669\uff08\u5982\u9047\u542b\u62ec\u53f7\u7684\u590d\u6742\u6587\u672c\uff09  \n- \u5f53 `is_markdown_file` \u8fd4\u56de `False` \u65f6\uff0c\u6b64\u51fd\u6570\u5c06\u76f4\u63a5\u4f20\u9012\u8be5\u8fd4\u56de\u503c  \n\n**\u8f93\u51fa\u793a\u4f8b**:  \n\u8f93\u5165\uff1a`filename=\"API.md\", append=True`  \n\u5047\u8bbe\u5339\u914d\u5230\u5386\u53f2\u6761\u76ee `- [\u6838\u5fc3API](docs/API.md)`\uff0c\u5219\u8fd4\u56de `\"\u6838\u5fc3API\"`  \n\u82e5\u672a\u5339\u914d\uff0c\u8fd4\u56de `\"API\"`\uff08\u901a\u8fc7 `is_markdown_file` \u5904\u7406\u540e\u7684\u7ed3\u679c\uff09"
            ],
            "code_start_line": 85,
            "code_end_line": 100,
            "params": [
                "filename",
                "append"
            ],
            "have_return": true,
            "code_content": "def write_md_filename(filename, append):\n    \"\"\" write markdown filename\n\n    i: filename and append\n    p: if append: find former list name and return\n       else: write filename\n    \"\"\"\n    if append:\n        for line in former_summary_list:\n            if re.search(filename, line):\n                s = re.search('\\[.*\\]\\(', line)\n                return s.group()[1:-2]\n        else:\n            return is_markdown_file(filename)\n    else:\n        return is_markdown_file(filename)\n",
            "name_column": 4,
            "who_reference_me": [
                "output_markdown"
            ],
            "reference_who": [
                "is_markdown_file"
            ],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "main",
            "md_content": [
                "**main**: main \u51fd\u6570\u7684\u529f\u80fd\u662f\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\u5e76\u63a7\u5236 GitBook \u9879\u76ee SUMMARY.md \u6587\u4ef6\u7684\u751f\u6210\u6d41\u7a0b\u3002\n\n**\u53c2\u6570(parameters)**: \u8be5\u51fd\u6570\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u63a5\u6536\u8f93\u5165\uff0c\u65e0\u663e\u5f0f\u51fd\u6570\u53c2\u6570\uff0c\u5305\u542b\u4ee5\u4e0b\u547d\u4ee4\u884c\u53c2\u6570\u5b9a\u4e49\uff1a  \n\u00b7 -o/--overwrite: \u5e03\u5c14\u6807\u5fd7\uff0c\u542f\u7528\u65f6\u4f1a\u8986\u76d6\u73b0\u6709 SUMMARY.md \u6587\u4ef6  \n\u00b7 -a/--append: \u5e03\u5c14\u6807\u5fd7\uff0c\u542f\u7528\u65f6\u5728\u73b0\u6709 SUMMARY.md \u57fa\u7840\u4e0a\u8ffd\u52a0\u5185\u5bb9  \n\u00b7 directory: \u4f4d\u7f6e\u53c2\u6570\uff0c\u6307\u5b9a GitBook \u9879\u76ee\u7684\u6839\u76ee\u5f55\u8def\u5f84  \n\n**\u4ee3\u7801\u63cf\u8ff0**:  \nmain \u51fd\u6570\u4f5c\u4e3a\u7a0b\u5e8f\u5165\u53e3\u70b9\uff0c\u4e3b\u8981\u5b9e\u73b0\u4ee5\u4e0b\u6838\u5fc3\u903b\u8f91\uff1a  \n1. **\u53c2\u6570\u89e3\u6790**\uff1a\u4f7f\u7528 argparse \u6a21\u5757\u521b\u5efa\u4e09\u4e2a\u53c2\u6570\uff1a  \n   - \u4e92\u65a5\u7684 overwrite/append \u6a21\u5f0f\u5f00\u5173\uff08\u901a\u8fc7 store_true \u52a8\u4f5c\u5b9e\u73b0\u4e92\u65a5\uff09  \n   - \u5fc5\u586b\u7684 directory \u8def\u5f84\u53c2\u6570  \n\n2. **\u6a21\u5f0f\u5904\u7406**\uff1a  \n   - overwrite \u6a21\u5f0f\u4f18\u5148\uff0c\u76f4\u63a5\u521b\u5efa\u65b0 SUMMARY.md  \n   - \u975e overwrite \u4e14\u5b58\u5728\u65e7\u6587\u4ef6\u65f6\uff0c\u8f93\u51fa\u5230 SUMMARY-GitBook-auto-summary.md  \n   - append \u6a21\u5f0f\u6fc0\u6d3b\u65f6\u4f1a\u8bfb\u53d6\u539f\u6709 SUMMARY.md \u5185\u5bb9\u5230\u5168\u5c40\u53d8\u91cf former_summary_list  \n\n3. **\u6587\u4ef6\u751f\u6210**\uff1a  \n   - \u521b\u5efa/\u6253\u5f00\u8f93\u51fa\u6587\u4ef6\u5e76\u5199\u5165\u56fa\u5b9a\u5934 \"# Summary\\n\\n\"  \n   - \u8c03\u7528 output_markdown \u51fd\u6570\u6267\u884c\u76ee\u5f55\u904d\u5386\u548c\u5185\u5bb9\u751f\u6210  \n   - \u6700\u7ec8\u8f93\u51fa\u5b8c\u6210\u63d0\u793a\u5e76\u8fd4\u56de\u72b6\u6001\u7801 0  \n\n\u5728\u9879\u76ee\u8c03\u7528\u5173\u7cfb\u4e2d\uff1a  \n- **\u8c03\u7528\u94fe\u8d77\u70b9**\uff1a\u4f5c\u4e3a\u7a0b\u5e8f\u4e3b\u5165\u53e3\u88ab\u76f4\u63a5\u6267\u884c  \n- **\u6838\u5fc3\u8c03\u7528**\uff1a\u901a\u8fc7 output_markdown \u5b9e\u73b0\u76ee\u5f55\u6811\u904d\u5386\u548c\u5185\u5bb9\u751f\u6210  \n- **\u6570\u636e\u4f20\u9012**\uff1a\u5411 output_markdown \u4f20\u9012 append \u6807\u5fd7\u3001\u76ee\u5f55\u8def\u5f84\u548c\u6587\u4ef6\u5bf9\u8c61  \n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. overwrite \u548c append \u53c2\u6570\u5177\u6709\u4e92\u65a5\u6027\uff0c\u540c\u65f6\u6307\u5b9a\u65f6 overwrite \u4f18\u5148\u7ea7\u66f4\u9ad8  \n2. append \u6a21\u5f0f\u4f9d\u8d56\u73b0\u6709 SUMMARY.md \u6587\u4ef6\uff0c\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\u5c06\u4e0d\u6267\u884c\u5185\u5bb9\u5408\u5e76  \n3. \u8f93\u51fa\u6587\u4ef6\u547d\u540d\u89c4\u5219\uff1a  \n   - \u5f53 overwrite=False \u4e14\u5b58\u5728\u65e7\u6587\u4ef6\u65f6\uff0c\u751f\u6210 SUMMARY-GitBook-auto-summary.md  \n   - \u5176\u4ed6\u60c5\u51b5\u76f4\u63a5\u5199\u5165 SUMMARY.md  \n4. \u4f7f\u7528\u5168\u5c40\u53d8\u91cf former_summary_list \u5b58\u50a8\u5386\u53f2\u6570\u636e\uff0c\u9700\u786e\u4fdd\u5728 append \u6a21\u5f0f\u4e0b\u7684\u6587\u4ef6\u8bfb\u53d6\u6210\u529f  \n5. \u8fd4\u56de\u72b6\u6001\u7801 0 \u59cb\u7ec8\u8868\u793a\u6267\u884c\u5b8c\u6210\uff0c\u4e0d\u53cd\u6620\u6587\u4ef6\u662f\u5426\u88ab\u4fee\u6539\u7684\u903b\u8f91\u72b6\u6001  \n\n**\u8f93\u51fa\u793a\u4f8b**:  \n\u63a7\u5236\u53f0\u53ef\u80fd\u8f93\u51fa\uff1a  \nGitBook auto summary: /path/to/gitbook --overwrite  \nProcessing  chapter1  \nProcessing  README.md  \nGitBook auto summary finished:)"
            ],
            "code_start_line": 103,
            "code_end_line": 142,
            "params": [],
            "have_return": true,
            "code_content": "def main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-o', '--overwrite',\n                        help='overwrite on SUMMARY.md',\n                        action=\"store_true\")\n    parser.add_argument('-a', '--append',\n                        help='append on SUMMARY.md',\n                        action=\"store_true\")\n    parser.add_argument('directory',\n                        help='the directory of your GitBook root')\n    args = parser.parse_args()\n    overwrite = args.overwrite\n    append = args.append\n    dir_input = args.directory\n\n    # print information\n    print('GitBook auto summary:', dir_input, end=' ')\n    if overwrite:\n        print('--overwrite', end=' ')\n    if append and os.path.exists(os.path.join(dir_input, 'SUMMARY.md')):\n        # append: read former SUMMARY.md\n        print('--append', end=' ')\n        global former_summary_list\n        with open(os.path.join(dir_input, 'SUMMARY.md')) as f:\n            former_summary_list = f.readlines()\n            f.close()\n    print()\n    # output to flie\n    if (overwrite == False and\n            os.path.exists(os.path.join(dir_input, 'SUMMARY.md'))):\n        # overwrite logic\n        filename = 'SUMMARY-GitBook-auto-summary.md'\n    else:\n        filename = 'SUMMARY.md'\n    output = open(os.path.join(dir_input, filename), 'w')\n    output.write('# Summary\\n\\n')\n    output_markdown(dir_input, dir_input, output, append)\n\n    print('GitBook auto summary finished:) ')\n    return 0\n",
            "name_column": 4,
            "who_reference_me": [],
            "reference_who": [
                "output_markdown"
            ],
            "item_status": "doc_up_to_date"
        }
    ]
}