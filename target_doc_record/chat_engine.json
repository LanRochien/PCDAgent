{
    "chat_engine.py": [
        {
            "type": "ClassDef",
            "name": "ChatEngine",
            "md_content": [
                "**ChatEngine**: ChatEngine \u7684\u529f\u80fd\u662f\u57fa\u4e8e\u76ee\u6807\u4ee3\u7801\u5bf9\u8c61\u751f\u6210\u7ed3\u6784\u5316\u63d0\u793a\u5e76\u8c03\u7528\u5927\u8bed\u8a00\u6a21\u578b\u63a5\u53e3\u81ea\u52a8\u751f\u6210\u6587\u6863\u3002\n\n**\u5c5e\u6027(atributes)**:  \n\u00b7 llm: \u521d\u59cb\u5316\u65f6\u521b\u5efa\u7684DeepSeek\u5b9e\u4f8b\uff0c\u914d\u7f6e\u53c2\u6570\u5305\u62ec\uff1a  \n  - api_key: DeepSeek API\u5bc6\u94a5(\u786c\u7f16\u7801\u4e3a'sk-fbd6284d67a24d73bf7ebdd2be25b91e')  \n  - api_base: API\u7aef\u70b9'https://api.deepseek.com/'  \n  - model: \u4f7f\u7528\u6a21\u578b'deepseek-reasoner'  \n  - timeout: \u8bf7\u6c42\u8d85\u65f6\u65f6\u95f41000\u6beb\u79d2  \n  - max_retries: \u6700\u5927\u91cd\u8bd5\u6b21\u65701\u6b21  \n  - is_chat_mode: \u542f\u7528\u804a\u5929\u6a21\u5f0f  \n\n**\u4ee3\u7801\u63cf\u8ff0**:  \n\u8be5\u7c7b\u901a\u8fc7\u4e24\u9636\u6bb5\u6d41\u7a0b\u5b9e\u73b0\u6587\u6863\u751f\u6210\uff1a  \n1. **\u63d0\u793a\u7ec4\u88c5(assemble_prompt)**\uff1a  \n   - \u89e3\u6790TargetItem\u5bf9\u8c61\uff0c\u63d0\u53d6\u4ee3\u7801\u7c7b\u578b(Class/Func)\u3001\u540d\u79f0\u3001\u5185\u5bb9\u3001\u8fd4\u56de\u503c\u72b6\u6001\u7b49\u5143\u6570\u636e  \n   - \u81ea\u52a8\u6784\u5efa\u5173\u7cfb\u7f51\u7edc\uff1a  \n     * reference_who: \u5206\u6790\u5f53\u524d\u4ee3\u7801\u8c03\u7528\u7684\u5916\u90e8\u5bf9\u8c61  \n     * who_reference_me: \u68c0\u6d4b\u8c03\u7528\u5f53\u524d\u4ee3\u7801\u7684\u5916\u90e8\u5bf9\u8c61  \n   - \u52a8\u6001\u751f\u6210\u4e0a\u4e0b\u6587\u63d0\u793a\uff1a  \n     * \u6839\u636e\u4ee3\u7801\u7c7b\u578b\u5207\u6362\u5c5e\u6027/\u53c2\u6570\u63cf\u8ff0\u6a21\u677f  \n     * \u5305\u542b\u88ab\u8c03\u7528\u5bf9\u8c61\u7684\u6587\u6863\u4e0e\u6e90\u4ee3\u7801\u7247\u6bb5  \n     * \u96c6\u6210\u8c03\u7528\u5173\u7cfb\u8bf4\u660e(\u5f53\u5b58\u5728\u5f15\u7528\u65f6)  \n   - \u4f7f\u7528chat_template\u683c\u5f0f\u5316\u6700\u7ec8\u63d0\u793a\u4fe1\u606f  \n\n2. **\u6587\u6863\u751f\u6210(generate_doc)**\uff1a  \n   - \u8c03\u7528assemble_prompt\u6784\u5efa\u5b8c\u6574\u63d0\u793a  \n   - \u901a\u8fc7DeepSeek API\u8fdb\u884c3\u6b21\u91cd\u8bd5\u673a\u5236  \n   - \u6355\u83b7\u5f02\u5e38\u65f6\u8f93\u51fa\u9519\u8bef\u65e5\u5fd7\u5e76\u5ef6\u65f63\u79d2\u91cd\u8bd5  \n   - \u6700\u7ec8\u8fd4\u56de\u5927\u8bed\u8a00\u6a21\u578b\u751f\u6210\u7684\u6587\u6863\u5185\u5bb9  \n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. API\u5bc6\u94a5\u786c\u7f16\u7801\u5b58\u5728\u5b89\u5168\u98ce\u9669\uff0c\u9700\u6539\u4e3a\u73af\u5883\u53d8\u91cf\u6ce8\u5165  \n2. \u7f51\u7edc\u8bf7\u6c42\u672a\u8bbe\u7f6e\u4ee3\u7406\u914d\u7f6e\uff0c\u53ef\u80fd\u5f71\u54cd\u8fde\u63a5\u7a33\u5b9a\u6027  \n3. TargetItem\u5bf9\u8c61\u9700\u5b8c\u6574\u5305\u542bcontent\u3001who_reference_me\u7b49\u5fc5\u9700\u5c5e\u6027  \n4. \u6700\u5927\u91cd\u8bd5\u6b21\u6570\u8bbe\u7f6e\u4e3a1\u6b21\uff0c\u7f51\u7edc\u4e0d\u7a33\u5b9a\u65f6\u53ef\u80fd\u63d0\u524d\u7ec8\u6b62  \n5. \u8d85\u65f6\u8bbe\u7f6e1000ms\u9700\u6839\u636e\u5b9e\u9645\u7f51\u7edc\u73af\u5883\u8c03\u6574  \n\n**\u8f93\u51fa\u793a\u4f8b**:  \n\u751f\u6210\u7684\u6587\u6863\u53ef\u80fd\u5305\u542b\u5982\u4e0b\u7ed3\u6784\uff1a  \n\"## DataProcessor  \n\u8be5\u7c7b\u8d1f\u8d23\u6570\u636e\u9884\u5904\u7406\u6d41\u7a0b\uff0c\u4e3b\u8981\u5c5e\u6027\u5305\u62ecdataset_path\u548cbatch_size\u3002\u901a\u8fc7transform()\u65b9\u6cd5\u5c06\u539f\u59cb\u6570\u636e\u8f6c\u6362\u4e3a\u5f20\u91cf\u683c\u5f0f\uff0c\u8f93\u51fa\u793a\u4f8b\uff1atorch.Tensor(shape=[32, 256])\u3002  \n\u8be5\u7c7b\u7684transform()\u65b9\u6cd5\u88abTrainPipeline\u8c03\u7528\uff0c\u540c\u65f6\u4f9d\u8d56\u4e8eDatasetLoader\u7c7b\u5b8c\u6210\u6570\u636e\u52a0\u8f7d\u3002\""
            ],
            "code_start_line": 10,
            "code_end_line": 116,
            "params": [],
            "have_return": true,
            "code_content": "class ChatEngine(object):\n\n    def __init__(self):\n\n        self.llm=DeepSeek(\n            api_key='sk-fbd6284d67a24d73bf7ebdd2be25b91e',\n            api_base='https://api.deepseek.com/',\n            model='deepseek-reasoner',\n            timeout=1000,\n            max_retries=1,\n            is_chat_mode=True,\n        )\n\n    def assemble_prompt(self,target_item:TargetItem):\n\n        formatted_messages:str\n\n        code_info = target_item.content\n        referenced = len(target_item.who_reference_me) > 0\n\n        code_type = code_info[\"type\"]\n        code_name = code_info[\"name\"]\n        code_content = code_info[\"code_content\"]\n        have_return = code_info[\"have_return\"]\n\n        code_type_tell = \"Class\" if code_type == \"ClassDef\" else \"Function\"\n        parameters_or_attribute = (\n            \"\u5c5e\u6027(atributes)\" if code_type == \"ClassDef\" else \"\u53c2\u6570(parameters)\"\n        )\n        have_return_tell = (\n            \"**\u8f93\u51fa\u793a\u4f8b**: \u6a21\u62df\u51fa\u4ee3\u7801\u6bb5\u53ef\u80fd\u7684\u8f93\u51fa\u60c5\u51b5.\"\n            if have_return\n            else \"\"\n        )\n        combine_ref_situation = (\n            \"\u540c\u65f6\u89e3\u91ca\u5176\u5728\u9879\u76ee\u4e2d\u7684\u8c03\u7528\u4e0e\u88ab\u8c03\u7528\u72b6\u51b5,\"\n            if referenced\n            else \"\"\n        )\n        def get_referenced_prompt(target_item: target_item) -> str:\n            if len(target_item.reference_who) == 0:\n                return \"\"\n            prompt = [\n                \"\"\"\u8bf7\u6ce8\u610f\uff0c\u8be5\u4ee3\u7801\u6bb5\u8c03\u7528\u4e86\u4ee5\u4e0b\u5bf9\u8c61\uff0c\u5176\u76f8\u5173\u4ee3\u7801\u4e0e\u5bf9\u5e94\u6587\u6863\u5982\u4e0b:\"\"\"\n            ]\n            for reference_item in target_item.reference_who:\n                instance_prompt = (\n                    f\"\"\"\u5bf9\u8c61\u540d: {reference_item.get_full_name()}\\n\u6587\u6863: \\n{reference_item.md_content[-1] if len(reference_item.md_content) > 0 else 'None'}\\n\u6e90\u4ee3\u7801:```\\n{reference_item.content['code_content'] if 'code_content' in reference_item.content.keys() else ''}\\n```\"\"\"\n                    + \"=\" * 10\n                )\n                prompt.append(instance_prompt)\n            return \"\\n\".join(prompt)\n\n        def get_referencer_prompt(target_item: target_item) -> str:\n            if len(target_item.who_reference_me) == 0:\n                return \"\"\n            prompt = [\n                \"\"\"\u540c\u65f6\uff0c\u8be5\u4ee3\u7801\u6bb5\u88ab\u4ee5\u4e0b\u4ee3\u7801\u8c03\u7528,\u5176\u76f8\u5173\u4ee3\u7801\u4e0e\u5bf9\u5e94\u6587\u6863\u5982\u4e0b:\"\"\"\n            ]\n            for referencer_item in target_item.who_reference_me:\n                instance_prompt = (\n                    f\"\"\"\u5bf9\u8c61\u540d: {referencer_item.get_full_name()}\\n\u6587\u6863: \\n{referencer_item.md_content[-1] if len(referencer_item.md_content) > 0 else 'None'}\\n\u6e90\u4ee3\u7801:```\\n{referencer_item.content['code_content'] if 'code_content' in referencer_item.content.keys() else 'None'}\\n```\"\"\"\n                    + \"=\" * 10\n                )\n                prompt.append(instance_prompt)\n            return \"\\n\".join(prompt)\n\n        def get_relationship_description(referencer_content, reference_letter):\n            if referencer_content and reference_letter:\n                return \"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u8c03\u7528\u8005\u4e0e\u88ab\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\"\n            #\n            elif referencer_content:\n                return \"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\"\n            elif reference_letter:\n                return \"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u88ab\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\"\n            else:\n                return \"\"\n\n        referencer_content = get_referencer_prompt(target_item)\n        reference_letter = get_referenced_prompt(target_item)\n        has_relationship = get_relationship_description(\n            referencer_content, reference_letter\n        )\n\n        formatted_messages= chat_template.format_messages(\n            combine_ref_situation=combine_ref_situation,\n            code_type_tell=code_type_tell,\n            code_name=code_name,\n            code_content=code_content,\n            have_return_tell=have_return_tell,\n            has_relationship=has_relationship,\n            reference_letter=reference_letter,\n            referencer_content=referencer_content,\n            parameters_or_attribute=parameters_or_attribute,\n        )\n        return formatted_messages\n\n    def generate_doc(self, target_item: TargetItem):\n        \"\"\"Generates documentation for a given DocItem.\"\"\"\n        messages = self.assemble_prompt(target_item)\n        for attempt in range(3):\n            try:\n                response = self.llm.chat(messages)\n                return response.message.content\n            except Exception as e:\n                print(e,f\"{target_item.obj_name} \u7b2c {attempt + 1}/3 \u6b21\u8fde\u63a5\u5931\u8d25\uff0c\u6b63\u5728\u5c1d\u8bd5\u91cd\u65b0\u91cd\u65b0\u8fde\u63a5\u3002\")\n                time.sleep(3)\n",
            "name_column": 6,
            "who_reference_me": [],
            "reference_who": [],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "__init__",
            "md_content": [
                "**__init__**: __init__ \u51fd\u6570\u7684\u529f\u80fd\u662f\u521d\u59cb\u5316\u7c7b\u7684\u5b9e\u4f8b\u5e76\u914d\u7f6e DeepSeek \u8bed\u8a00\u6a21\u578b\u5ba2\u6237\u7aef\u3002\n\n**\u53c2\u6570(parameters)**: \u8be5 Function \u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u7684\u53c2\u6570\uff08\u4ec5\u5305\u542b\u9ed8\u8ba4\u7684 self \u53c2\u6570\uff09\u3002\n\n**\u4ee3\u7801\u63cf\u8ff0**: \u8be5 Function \u662f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5728\u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\u81ea\u52a8\u6267\u884c\u3002\u5176\u6838\u5fc3\u4f5c\u7528\u662f\u4e3a\u5f53\u524d\u5bf9\u8c61\u521b\u5efa\u5e76\u914d\u7f6e\u4e00\u4e2a\u540d\u4e3a self.llm \u7684 DeepSeek \u8bed\u8a00\u6a21\u578b\u5ba2\u6237\u7aef\u5b9e\u4f8b\u3002\u5177\u4f53\u901a\u8fc7\u4ee5\u4e0b\u53c2\u6570\u5b8c\u6210\u914d\u7f6e\uff1a\n\u00b7 api_key: \u4f7f\u7528\u56fa\u5b9a\u5b57\u7b26\u4e32 'sk-fbd6284d67a24d73bf7ebdd2be25b91e' \u4f5c\u4e3a API \u8ba4\u8bc1\u5bc6\u94a5\u3002\n\u00b7 api_base: \u6307\u5b9a API \u670d\u52a1\u7aef\u70b9\u4e3a 'https://api.deepseek.com/'\u3002\n\u00b7 model: \u660e\u786e\u9009\u62e9 'deepseek-reasoner' \u4f5c\u4e3a\u8c03\u7528\u7684\u6a21\u578b\u7248\u672c\u3002\n\u00b7 timeout: \u8bbe\u7f6e API \u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\u4e3a 1000 \u79d2\u3002\n\u00b7 max_retries: \u5b9a\u4e49 API \u8c03\u7528\u5931\u8d25\u65f6\u7684\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u4e3a 1 \u6b21\u3002\n\u00b7 is_chat_mode: \u542f\u7528\u804a\u5929\u6a21\u5f0f\uff08\u8bbe\u7f6e\u4e3a True\uff09\u3002\n\n**\u6ce8\u610f\u4e8b\u9879**:\n1. \u5f53\u524d\u5b9e\u73b0\u5c06 API key \u786c\u7f16\u7801\u5728\u4ee3\u7801\u4e2d\uff0c\u5b58\u5728\u5b89\u5168\u98ce\u9669\uff0c\u751f\u4ea7\u73af\u5883\u5e94\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6216\u52a0\u5bc6\u914d\u7f6e\u6ce8\u5165\u654f\u611f\u4fe1\u606f\n2. timeout \u8bbe\u7f6e\u4e3a 1000 \u79d2\uff08\u7ea6 16 \u5206\u949f\uff09\u53ef\u80fd\u8d85\u51fa\u5e38\u89c4\u9700\u6c42\uff0c\u9700\u6839\u636e\u5b9e\u9645\u7f51\u7edc\u73af\u5883\u548c\u4efb\u52a1\u590d\u6742\u5ea6\u8c03\u6574\n3. max_retries=1 \u8868\u793a\u4ec5\u5141\u8bb8\u4e00\u6b21\u91cd\u8bd5\uff0c\u5728\u5f31\u7f51\u7edc\u73af\u5883\u4e0b\u53ef\u80fd\u5f71\u54cd\u670d\u52a1\u53ef\u9760\u6027\n4. model \u53c2\u6570\u56fa\u5b9a\u4e3a 'deepseek-reasoner'\uff0c\u66f4\u6362\u6a21\u578b\u9700\u76f4\u63a5\u4fee\u6539\u6e90\u4ee3\u7801\n5. is_chat_mode=True \u7684\u914d\u7f6e\u4f1a\u5f71\u54cd API \u4ea4\u4e92\u6a21\u5f0f\uff0c\u9700\u786e\u4fdd\u4e0e\u6240\u9009\u6a21\u578b\u7684\u517c\u5bb9\u6027\n6. \u8be5\u6784\u9020\u51fd\u6570\u672a\u63d0\u4f9b\u53c2\u6570\u5316\u914d\u7f6e\u80fd\u529b\uff0c\u6240\u6709\u914d\u7f6e\u9700\u901a\u8fc7\u4fee\u6539\u6e90\u4ee3\u7801\u5b9e\u73b0\u8c03\u6574"
            ],
            "code_start_line": 12,
            "code_end_line": 21,
            "params": [
                "self"
            ],
            "have_return": false,
            "code_content": "    def __init__(self):\n\n        self.llm=DeepSeek(\n            api_key='sk-fbd6284d67a24d73bf7ebdd2be25b91e',\n            api_base='https://api.deepseek.com/',\n            model='deepseek-reasoner',\n            timeout=1000,\n            max_retries=1,\n            is_chat_mode=True,\n        )\n",
            "name_column": 8,
            "who_reference_me": [],
            "reference_who": [],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "assemble_prompt",
            "md_content": [
                "**assemble_prompt**: assemble_prompt \u51fd\u6570\u7684\u529f\u80fd\u662f\u6839\u636e\u76ee\u6807\u4ee3\u7801\u9879\u7684\u5c5e\u6027\u548c\u5f15\u7528\u5173\u7cfb\u7ec4\u88c5\u751f\u6210\u7ed3\u6784\u5316\u63d0\u793a\u5185\u5bb9\u3002\n\n**\u53c2\u6570(parameters)**:  \n\u00b7 target_item: TargetItem\u7c7b\u578b\u5bf9\u8c61\uff0c\u5305\u542b\u9700\u8981\u751f\u6210\u6587\u6863\u7684\u4ee3\u7801\u6bb5\u5143\u6570\u636e\u3001\u5f15\u7528\u5173\u7cfb\u53ca\u5185\u5bb9\u4fe1\u606f\u3002\n\n**\u4ee3\u7801\u63cf\u8ff0**:  \n\u8be5\u51fd\u6570\u901a\u8fc7\u89e3\u6790 TargetItem \u7684\u5185\u5bb9\u548c\u5f15\u7528\u5173\u7cfb\uff0c\u52a8\u6001\u6784\u5efa LLM \u751f\u6210\u6587\u6863\u6240\u9700\u7684\u63d0\u793a\u6a21\u677f\u3002\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\uff1a\n1. **\u5143\u6570\u636e\u63d0\u53d6**\uff1a\u4ece target_item \u4e2d\u83b7\u53d6\u4ee3\u7801\u7c7b\u578b(Class/Func)\u3001\u540d\u79f0\u3001\u6e90\u7801\u5185\u5bb9\u3001\u8fd4\u56de\u503c\u6807\u8bc6\u7b49\u57fa\u7840\u4fe1\u606f\uff0c\u5e76\u8f6c\u6362\u4e3a\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\n2. **\u5f15\u7528\u5173\u7cfb\u5206\u6790**\uff1a\n   - \u901a\u8fc7 get_referenced_prompt \u751f\u6210\u88ab\u8c03\u7528\u5bf9\u8c61\u6e05\u5355\uff0c\u5305\u542b\u5176\u6587\u6863\u548c\u6e90\u7801\n   - \u901a\u8fc7 get_referencer_prompt \u751f\u6210\u8c03\u7528\u8005\u6e05\u5355\uff0c\u5305\u542b\u5176\u6587\u6863\u548c\u6e90\u7801\n   - \u6839\u636e\u5f15\u7528\u5173\u7cfb\u5b58\u5728\u60c5\u51b5\uff0c\u751f\u6210\u5bf9\u5e94\u7684\u5173\u7cfb\u63cf\u8ff0\u6a21\u677f has_relationship\n3. **\u6a21\u677f\u7ec4\u5408**\uff1a\u4f7f\u7528 chat_template.format_messages \u5c06\u4ee3\u7801\u7279\u5f81\u3001\u5f15\u7528\u5173\u7cfb\u3001\u8fd4\u56de\u7c7b\u578b\u7b49\u53c2\u6570\u6ce8\u5165\u9884\u8bbe\u6a21\u677f\uff0c\u6700\u7ec8\u751f\u6210\u7b26\u5408\u5927\u8bed\u8a00\u6a21\u578b\u8981\u6c42\u7684\u63d0\u793a\u7ed3\u6784\n\n\u5728\u9879\u76ee\u8c03\u7528\u5173\u7cfb\u4e2d\uff1a\n- **\u88ab\u8c03\u7528**\uff1a\u7531 generate_doc \u65b9\u6cd5\u8c03\u7528\uff0c\u4f5c\u4e3a\u6587\u6863\u751f\u6210\u6d41\u7a0b\u4e2d\u7684\u63d0\u793a\u5de5\u7a0b\u73af\u8282\n- **\u5185\u90e8\u8c03\u7528**\uff1a\u901a\u8fc7\u4e09\u4e2a\u5d4c\u5957\u51fd\u6570\u5904\u7406\u5f15\u7528\u5173\u7cfb\uff0c\u5176\u4e2d\uff1a\n  - get_referenced_prompt \u5904\u7406\u8be5\u4ee3\u7801\u6bb5\u8c03\u7528\u7684\u5916\u90e8\u5bf9\u8c61\n  - get_referencer_prompt \u5904\u7406\u8c03\u7528\u8be5\u4ee3\u7801\u6bb5\u7684\u5916\u90e8\u5bf9\u8c61\n  - get_relationship_description \u751f\u6210\u5f15\u7528\u5173\u7cfb\u7684\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. \u8f93\u5165 TargetItem \u5fc5\u987b\u5305\u542b\u5b8c\u6574\u7684 content \u5b57\u5178\u7ed3\u6784\uff0c\u4e14\u9700\u9884\u5148\u751f\u6210 who_reference_me/reference_who \u7b49\u5f15\u7528\u5173\u7cfb\u6570\u636e\n2. \u4f9d\u8d56 chat_template \u7684\u9884\u5b9a\u4e49\u6a21\u677f\u7ed3\u6784\uff0c\u6a21\u677f\u9700\u5305\u542b\u6240\u6709\u5360\u4f4d\u7b26\u53c2\u6570\n3. \u5bf9\u5f15\u7528\u5bf9\u8c61\u7684\u6587\u6863(md_content)\u6709\u7248\u672c\u63a7\u5236\u8981\u6c42\uff0c\u59cb\u7ec8\u53d6\u6700\u65b0\u7248\u672c(-1\u7d22\u5f15)\n4. \u81ea\u52a8\u5904\u7406\u7a7a\u5f15\u7528\u573a\u666f\uff0c\u5f53\u65e0\u5f15\u7528\u5173\u7cfb\u65f6\u4f1a\u8fc7\u6ee4\u5bf9\u5e94\u63d0\u793a\u6bb5\u843d\n\n**\u8f93\u51fa\u793a\u4f8b**:  \n[\u7cfb\u7edf\u63d0\u793a] \u8bf7\u4e3a Function:calculate_score \u7f16\u5199\u6587\u6863\uff0c\u9700\u5305\u542b\uff1a  \n1. \u529f\u80fd\u8bf4\u660e  \n2. \u53c2\u6570\u8bf4\u660e  \n3. \u8fd4\u56de\u503c\u8bf4\u660e  \n**\u8f93\u51fa\u793a\u4f8b**: \u6a21\u62df\u51fa\u4ee3\u7801\u6bb5\u53ef\u80fd\u7684\u8f93\u51fa\u60c5\u51b5.  \n\u8bf7\u6ce8\u610f\uff0c\u8be5\u4ee3\u7801\u6bb5\u8c03\u7528\u4e86\u4ee5\u4e0b\u5bf9\u8c61\uff1a  \n\u5bf9\u8c61\u540d: utils.validate_input  \n\u6587\u6863: \u8f93\u5165\u6821\u9a8c\u5de5\u5177\u7c7b...  \n\u6e90\u4ee3\u7801:```def validate_input(data):...```  \n==========  \n\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u8c03\u7528\u8005\u4e0e\u88ab\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb"
            ],
            "code_start_line": 23,
            "code_end_line": 105,
            "params": [
                "self",
                "target_item"
            ],
            "have_return": true,
            "code_content": "    def assemble_prompt(self,target_item:TargetItem):\n\n        formatted_messages:str\n\n        code_info = target_item.content\n        referenced = len(target_item.who_reference_me) > 0\n\n        code_type = code_info[\"type\"]\n        code_name = code_info[\"name\"]\n        code_content = code_info[\"code_content\"]\n        have_return = code_info[\"have_return\"]\n\n        code_type_tell = \"Class\" if code_type == \"ClassDef\" else \"Function\"\n        parameters_or_attribute = (\n            \"\u5c5e\u6027(atributes)\" if code_type == \"ClassDef\" else \"\u53c2\u6570(parameters)\"\n        )\n        have_return_tell = (\n            \"**\u8f93\u51fa\u793a\u4f8b**: \u6a21\u62df\u51fa\u4ee3\u7801\u6bb5\u53ef\u80fd\u7684\u8f93\u51fa\u60c5\u51b5.\"\n            if have_return\n            else \"\"\n        )\n        combine_ref_situation = (\n            \"\u540c\u65f6\u89e3\u91ca\u5176\u5728\u9879\u76ee\u4e2d\u7684\u8c03\u7528\u4e0e\u88ab\u8c03\u7528\u72b6\u51b5,\"\n            if referenced\n            else \"\"\n        )\n        def get_referenced_prompt(target_item: target_item) -> str:\n            if len(target_item.reference_who) == 0:\n                return \"\"\n            prompt = [\n                \"\"\"\u8bf7\u6ce8\u610f\uff0c\u8be5\u4ee3\u7801\u6bb5\u8c03\u7528\u4e86\u4ee5\u4e0b\u5bf9\u8c61\uff0c\u5176\u76f8\u5173\u4ee3\u7801\u4e0e\u5bf9\u5e94\u6587\u6863\u5982\u4e0b:\"\"\"\n            ]\n            for reference_item in target_item.reference_who:\n                instance_prompt = (\n                    f\"\"\"\u5bf9\u8c61\u540d: {reference_item.get_full_name()}\\n\u6587\u6863: \\n{reference_item.md_content[-1] if len(reference_item.md_content) > 0 else 'None'}\\n\u6e90\u4ee3\u7801:```\\n{reference_item.content['code_content'] if 'code_content' in reference_item.content.keys() else ''}\\n```\"\"\"\n                    + \"=\" * 10\n                )\n                prompt.append(instance_prompt)\n            return \"\\n\".join(prompt)\n\n        def get_referencer_prompt(target_item: target_item) -> str:\n            if len(target_item.who_reference_me) == 0:\n                return \"\"\n            prompt = [\n                \"\"\"\u540c\u65f6\uff0c\u8be5\u4ee3\u7801\u6bb5\u88ab\u4ee5\u4e0b\u4ee3\u7801\u8c03\u7528,\u5176\u76f8\u5173\u4ee3\u7801\u4e0e\u5bf9\u5e94\u6587\u6863\u5982\u4e0b:\"\"\"\n            ]\n            for referencer_item in target_item.who_reference_me:\n                instance_prompt = (\n                    f\"\"\"\u5bf9\u8c61\u540d: {referencer_item.get_full_name()}\\n\u6587\u6863: \\n{referencer_item.md_content[-1] if len(referencer_item.md_content) > 0 else 'None'}\\n\u6e90\u4ee3\u7801:```\\n{referencer_item.content['code_content'] if 'code_content' in referencer_item.content.keys() else 'None'}\\n```\"\"\"\n                    + \"=\" * 10\n                )\n                prompt.append(instance_prompt)\n            return \"\\n\".join(prompt)\n\n        def get_relationship_description(referencer_content, reference_letter):\n            if referencer_content and reference_letter:\n                return \"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u8c03\u7528\u8005\u4e0e\u88ab\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\"\n            #\n            elif referencer_content:\n                return \"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\"\n            elif reference_letter:\n                return \"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u88ab\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\"\n            else:\n                return \"\"\n\n        referencer_content = get_referencer_prompt(target_item)\n        reference_letter = get_referenced_prompt(target_item)\n        has_relationship = get_relationship_description(\n            referencer_content, reference_letter\n        )\n\n        formatted_messages= chat_template.format_messages(\n            combine_ref_situation=combine_ref_situation,\n            code_type_tell=code_type_tell,\n            code_name=code_name,\n            code_content=code_content,\n            have_return_tell=have_return_tell,\n            has_relationship=has_relationship,\n            reference_letter=reference_letter,\n            referencer_content=referencer_content,\n            parameters_or_attribute=parameters_or_attribute,\n        )\n        return formatted_messages\n",
            "name_column": 8,
            "who_reference_me": [
                "ChatEngine/generate_doc"
            ],
            "reference_who": [
                "ChatEngine/assemble_prompt/get_referenced_prompt",
                "ChatEngine/assemble_prompt/get_referencer_prompt",
                "ChatEngine/assemble_prompt/get_relationship_description",
                "ChatEngine/generate_doc"
            ],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "get_referenced_prompt",
            "md_content": [
                "**get_referenced_prompt**: get_referenced_prompt \u51fd\u6570\u7684\u529f\u80fd\u662f\u751f\u6210\u76ee\u6807\u5bf9\u8c61\u6240\u4f9d\u8d56\u7684\u5176\u4ed6\u4ee3\u7801\u5bf9\u8c61\u7684\u5f15\u7528\u4fe1\u606f\u63d0\u793a\u6587\u672c\u3002\n\n**\u53c2\u6570(parameters)**:  \n\u00b7 target_item: \u7c7b\u578b\u4e3a target_item \u7684\u81ea\u5b9a\u4e49\u5bf9\u8c61\uff0c\u9700\u5305\u542b reference_who \u5c5e\u6027\u3002\u8be5\u5c5e\u6027\u5b58\u50a8\u5f53\u524d\u4ee3\u7801\u5bf9\u8c61\u6240\u5f15\u7528\u7684\u5176\u4ed6\u5bf9\u8c61\u96c6\u5408\u3002\n\n**\u4ee3\u7801\u63cf\u8ff0**:  \n\u8be5\u51fd\u6570\u63a5\u6536\u4e00\u4e2a target_item \u5bf9\u8c61\uff0c\u901a\u8fc7\u68c0\u67e5\u5176 reference_who \u5c5e\u6027\u5224\u65ad\u662f\u5426\u5b58\u5728\u88ab\u5f15\u7528\u7684\u5bf9\u8c61\u3002\u82e5\u65e0\u5f15\u7528\u5bf9\u8c61\uff0c\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002\u82e5\u5b58\u5728\u5f15\u7528\u5bf9\u8c61\uff0c\u5219\u904d\u5386 reference_who \u5217\u8868\u4e2d\u7684\u6bcf\u4e2a reference_item\uff0c\u4f9d\u6b21\u63d0\u53d6\u4ee5\u4e0b\u4fe1\u606f\uff1a  \n1. **\u5bf9\u8c61\u540d**: \u901a\u8fc7\u8c03\u7528 reference_item.get_full_name() \u83b7\u53d6\u88ab\u5f15\u7528\u5bf9\u8c61\u7684\u5b8c\u6574\u540d\u79f0  \n2. **\u6587\u6863**: \u4ece reference_item.md_content \u5217\u8868\u4e2d\u83b7\u53d6\u6700\u65b0\u6587\u6863\u5185\u5bb9\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u663e\u793a 'None'\uff09  \n3. **\u6e90\u4ee3\u7801**: \u4ece reference_item.content \u5b57\u5178\u4e2d\u63d0\u53d6 code_content \u5b57\u6bb5\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u7559\u7a7a\uff09  \n\n\u6bcf\u4e2a\u88ab\u5f15\u7528\u5bf9\u8c61\u7684\u4fe1\u606f\u4ee5\u56fa\u5b9a\u6a21\u677f\u683c\u5f0f\u5316\uff0c\u5e76\u8ffd\u52a0\u5206\u9694\u7b26 \"==========\"\u3002\u6700\u7ec8\u5c06\u6240\u6709\u88ab\u5f15\u7528\u5bf9\u8c61\u7684\u4fe1\u606f\u62fc\u63a5\u4e3a\u591a\u884c\u5b57\u7b26\u4e32\uff0c\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u63d0\u793a\u5185\u5bb9\u8fd4\u56de\u3002\u8be5\u8f93\u51fa\u88ab\u4e0a\u5c42 assemble_prompt \u65b9\u6cd5\u6574\u5408\u5230\u6700\u7ec8\u751f\u6210\u7684\u4ee3\u7801\u6587\u6863\u4e2d\uff0c\u7528\u4e8e\u8bf4\u660e\u5f53\u524d\u4ee3\u7801\u6bb5\u7684\u5916\u90e8\u4f9d\u8d56\u5173\u7cfb\u3002\n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. target_item \u5fc5\u987b\u5b9e\u73b0 reference_who \u5c5e\u6027\uff0c\u4e14\u5176\u5143\u7d20\u9700\u5305\u542b get_full_name() \u65b9\u6cd5\u3001md_content \u5c5e\u6027\u548c content \u5b57\u5178  \n2. md_content \u53d6\u6700\u540e\u4e00\u6761\u6587\u6863\u8bb0\u5f55\u7684\u8bbe\u8ba1\u53ef\u80fd\u5f71\u54cd\u6587\u6863\u65f6\u6548\u6027  \n3. \u88ab\u5f15\u7528\u5bf9\u8c61\u7684 code_content \u5b57\u6bb5\u975e\u5f3a\u5236\u5b58\u5728\uff0c\u7f3a\u5931\u65f6\u5c06\u8f93\u51fa\u7a7a\u4ee3\u7801\u5757  \n4. \u8fd4\u56de\u5185\u5bb9\u5305\u542b\u56fa\u5b9a\u5934\u90e8\u63d0\u793a\u6587\u672c \"\u8bf7\u6ce8\u610f\uff0c\u8be5\u4ee3\u7801\u6bb5\u8c03\u7528\u4e86\u4ee5\u4e0b\u5bf9\u8c61...\"\uff0c\u4e0d\u53ef\u901a\u8fc7\u53c2\u6570\u914d\u7f6e\u4fee\u6539  \n\n**\u8f93\u51fa\u793a\u4f8b**:  \n```\n\u8bf7\u6ce8\u610f\uff0c\u8be5\u4ee3\u7801\u6bb5\u8c03\u7528\u4e86\u4ee5\u4e0b\u5bf9\u8c61\uff0c\u5176\u76f8\u5173\u4ee3\u7801\u4e0e\u5bf9\u5e94\u6587\u6863\u5982\u4e0b:\n\u5bf9\u8c61\u540d: utils.FileParser  \n\u6587\u6863:  \nFileParser \u7c7b\u7528\u4e8e\u5904\u7406\u6587\u672c\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c  \n\u6e90\u4ee3\u7801:```  \nclass FileParser:  \n    def read(self, path: str) -> str: ...  \n```  \n==========  \n\u5bf9\u8c61\u540d: config.load_settings  \n\u6587\u6863:  \nNone  \n\u6e90\u4ee3\u7801:```  \ndef load_settings():  \n    return json.load(open('config.json'))  \n```  \n==========  \n```"
            ],
            "code_start_line": 49,
            "code_end_line": 61,
            "params": [
                "target_item"
            ],
            "have_return": true,
            "code_content": "        def get_referenced_prompt(target_item: target_item) -> str:\n            if len(target_item.reference_who) == 0:\n                return \"\"\n            prompt = [\n                \"\"\"\u8bf7\u6ce8\u610f\uff0c\u8be5\u4ee3\u7801\u6bb5\u8c03\u7528\u4e86\u4ee5\u4e0b\u5bf9\u8c61\uff0c\u5176\u76f8\u5173\u4ee3\u7801\u4e0e\u5bf9\u5e94\u6587\u6863\u5982\u4e0b:\"\"\"\n            ]\n            for reference_item in target_item.reference_who:\n                instance_prompt = (\n                    f\"\"\"\u5bf9\u8c61\u540d: {reference_item.get_full_name()}\\n\u6587\u6863: \\n{reference_item.md_content[-1] if len(reference_item.md_content) > 0 else 'None'}\\n\u6e90\u4ee3\u7801:```\\n{reference_item.content['code_content'] if 'code_content' in reference_item.content.keys() else ''}\\n```\"\"\"\n                    + \"=\" * 10\n                )\n                prompt.append(instance_prompt)\n            return \"\\n\".join(prompt)\n",
            "name_column": 12,
            "who_reference_me": [
                "ChatEngine/assemble_prompt"
            ],
            "reference_who": [],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "get_referencer_prompt",
            "md_content": [
                "**get_referencer_prompt**: get_referencer_prompt \u51fd\u6570\u7684\u529f\u80fd\u662f\u751f\u6210\u88ab\u8c03\u7528\u4ee3\u7801\u6bb5\u7684\u5f15\u7528\u8005\u4fe1\u606f\u63d0\u793a\u6587\u672c\u3002\n\n**\u53c2\u6570(parameters)**:  \n\u00b7 target_item: \u5305\u542b\u4ee3\u7801\u6bb5\u5143\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u9700\u5177\u5907 who_reference_me \u5c5e\u6027\u548c content \u5b57\u5178\u7ed3\u6784\n\n**\u4ee3\u7801\u63cf\u8ff0**:  \n\u8be5\u51fd\u6570\u901a\u8fc7\u904d\u5386 target_item.who_reference_me \u96c6\u5408\uff0c\u6536\u96c6\u6240\u6709\u8c03\u7528\u5f53\u524d\u4ee3\u7801\u6bb5\u7684\u5f15\u7528\u8005\u4fe1\u606f\u3002\u6bcf\u4e2a\u5f15\u7528\u8005\u6761\u76ee(referencer_item)\u5c06\u751f\u6210\u5305\u542b\u4ee5\u4e0b\u8981\u7d20\u7684\u683c\u5f0f\u5316\u6587\u672c\uff1a  \n1. \u5bf9\u8c61\u5168\u540d(get_full_name())  \n2. \u6700\u65b0\u6587\u6863\u5185\u5bb9(md_content[-1]\uff0c\u53d6\u6700\u540e\u7248\u672c\u6587\u6863)  \n3. \u539f\u59cb\u6e90\u4ee3\u7801(content['code_content'])  \n4. \u4ee510\u4e2a\u7b49\u53f7\u4f5c\u4e3a\u6761\u76ee\u5206\u9694\u7b26  \n\n\u5f53\u68c0\u6d4b\u5230 who_reference_me \u4e3a\u7a7a\u65f6\u7acb\u5373\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\uff0c\u907f\u514d\u751f\u6210\u65e0\u6548\u5185\u5bb9\u3002\u751f\u6210\u7684\u63d0\u793a\u6587\u672c\u9996\u884c\u56fa\u5b9a\u5305\u542b\u5f15\u7528\u5173\u7cfb\u8bf4\u660e\u6807\u9898\uff0c\u540e\u7eed\u6309\"\u5bf9\u8c61\u540d-\u6587\u6863-\u6e90\u4ee3\u7801\"\u7ed3\u6784\u5faa\u73af\u62fc\u63a5\u591a\u4e2a\u5f15\u7528\u8005\u4fe1\u606f\u3002\u8be5\u51fd\u6570\u88ab assemble_prompt \u65b9\u6cd5\u8c03\u7528\uff0c\u7528\u4e8e\u6784\u5efa\u5305\u542b\u4ee3\u7801\u8c03\u7528\u5173\u7cfb\u7684\u5b8c\u6574\u63d0\u793a\u6a21\u677f\u3002\n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. \u4f9d\u8d56 target_item \u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0 get_full_name() \u65b9\u6cd5  \n2. md_content \u9700\u4fdd\u6301\u5217\u8868\u7ed3\u6784\u4e14\u6700\u65b0\u6587\u6863\u59cb\u7ec8\u4f4d\u4e8e\u672b\u5c3e  \n3. content \u5b57\u5178\u5e94\u5305\u542b code_content \u952e\u503c\u5bf9\u4ee5\u5c55\u793a\u6e90\u4ee3\u7801  \n4. \u8f93\u51fa\u7684\u7b49\u53f7\u5206\u9694\u7b26\u53ef\u80fd\u4ea7\u751f\u8fde\u7eed\u5206\u9694\u7ebf\uff0c\u9700\u6ce8\u610f\u4e0b\u6e38\u5904\u7406\u7684\u5bb9\u9519\u6027  \n\n**\u8f93\u51fa\u793a\u4f8b**:  \n\u540c\u65f6\uff0c\u8be5\u4ee3\u7801\u6bb5\u88ab\u4ee5\u4e0b\u4ee3\u7801\u8c03\u7528,\u5176\u76f8\u5173\u4ee3\u7801\u4e0e\u5bf9\u5e94\u6587\u6863\u5982\u4e0b:  \n\u5bf9\u8c61\u540d: module.ClassA.method1  \n\u6587\u6863:   \n\u6267\u884c\u6570\u636e\u9884\u5904\u7406\u64cd\u4f5c  \n\u6e90\u4ee3\u7801:```  \ndef method1(input_data):\n    return preprocess(input_data)  \n```  \n==========  \n\u5bf9\u8c61\u540d: utils.helper  \n\u6587\u6863: None  \n\u6e90\u4ee3\u7801:```  \nclass helper:\n    def run(self):\n        return target_item.execute()  \n```  \n=========="
            ],
            "code_start_line": 63,
            "code_end_line": 75,
            "params": [
                "target_item"
            ],
            "have_return": true,
            "code_content": "        def get_referencer_prompt(target_item: target_item) -> str:\n            if len(target_item.who_reference_me) == 0:\n                return \"\"\n            prompt = [\n                \"\"\"\u540c\u65f6\uff0c\u8be5\u4ee3\u7801\u6bb5\u88ab\u4ee5\u4e0b\u4ee3\u7801\u8c03\u7528,\u5176\u76f8\u5173\u4ee3\u7801\u4e0e\u5bf9\u5e94\u6587\u6863\u5982\u4e0b:\"\"\"\n            ]\n            for referencer_item in target_item.who_reference_me:\n                instance_prompt = (\n                    f\"\"\"\u5bf9\u8c61\u540d: {referencer_item.get_full_name()}\\n\u6587\u6863: \\n{referencer_item.md_content[-1] if len(referencer_item.md_content) > 0 else 'None'}\\n\u6e90\u4ee3\u7801:```\\n{referencer_item.content['code_content'] if 'code_content' in referencer_item.content.keys() else 'None'}\\n```\"\"\"\n                    + \"=\" * 10\n                )\n                prompt.append(instance_prompt)\n            return \"\\n\".join(prompt)\n",
            "name_column": 12,
            "who_reference_me": [
                "ChatEngine/assemble_prompt"
            ],
            "reference_who": [],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "get_relationship_description",
            "md_content": [
                "**get_relationship_description**: get_relationship_description \u51fd\u6570\u7684\u529f\u80fd\u662f\u6839\u636e\u4ee3\u7801\u6bb5\u7684\u5f15\u7528\u5173\u7cfb\u751f\u6210\u5bf9\u5e94\u7684\u529f\u80fd\u63cf\u8ff0\u63d0\u793a\u3002\n\n**\u53c2\u6570(parameters)**:  \n\u00b7 referencer_content: \u8868\u793a\u8c03\u7528\u8005\u7684\u5b58\u5728\u72b6\u6001\uff0c\u901a\u5e38\u7531 get_referencer_prompt \u51fd\u6570\u751f\u6210\u7684\u5b57\u7b26\u4e32\u5185\u5bb9\u662f\u5426\u975e\u7a7a\u51b3\u5b9a  \n\u00b7 reference_letter: \u8868\u793a\u88ab\u8c03\u7528\u8005\u7684\u5b58\u5728\u72b6\u6001\uff0c\u901a\u5e38\u7531 get_referenced_prompt \u51fd\u6570\u751f\u6210\u7684\u5b57\u7b26\u4e32\u5185\u5bb9\u662f\u5426\u975e\u7a7a\u51b3\u5b9a  \n\n**\u4ee3\u7801\u63cf\u8ff0**: \u8be5 Function \u901a\u8fc7\u5224\u65ad referencer_content \u548c reference_letter \u7684\u5b58\u5728\u6027\uff0c\u52a8\u6001\u751f\u6210\u5173\u4e8e\u4ee3\u7801\u6bb5\u5728\u9879\u76ee\u4e2d\u5f15\u7528\u5173\u7cfb\u7684\u529f\u80fd\u63cf\u8ff0\u3002\u5f53\u4e24\u8005\u540c\u65f6\u5b58\u5728\u65f6\u8fd4\u56de\u540c\u65f6\u5305\u542b\u8c03\u7528\u8005\u4e0e\u88ab\u8c03\u7528\u8005\u5173\u7cfb\u7684\u63d0\u793a\uff1b\u5f53\u4ec5\u5b58\u5728\u8c03\u7528\u8005\u65f6\u8fd4\u56de\u8c03\u7528\u8005\u5173\u7cfb\u63d0\u793a\uff1b\u5f53\u4ec5\u5b58\u5728\u88ab\u8c03\u7528\u8005\u65f6\u8fd4\u56de\u88ab\u8c03\u7528\u8005\u5173\u7cfb\u63d0\u793a\uff1b\u5426\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002\u6b64\u51fd\u6570\u88ab assemble_prompt \u65b9\u6cd5\u8c03\u7528\uff0c\u5176\u8fd4\u56de\u503c\u4f5c\u4e3a has_relationship \u53d8\u91cf\u53c2\u4e0e\u6700\u7ec8 prompt \u7684\u683c\u5f0f\u5316\u7ec4\u88c5\uff0c\u76f4\u63a5\u5f71\u54cd\u751f\u6210\u7684\u4ee3\u7801\u6587\u6863\u662f\u5426\u5305\u542b\u5f15\u7528\u5173\u7cfb\u8bf4\u660e\u3002\n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. \u53c2\u6570\u672c\u8d28\u4e0a\u662f\u57fa\u4e8e get_referencer_prompt/get_referenced_prompt \u8f93\u51fa\u7ed3\u679c\u7684\u975e\u7a7a\u5224\u65ad\uff0c\u9700\u786e\u4fdd\u4f20\u5165\u524d\u5df2\u5b8c\u6210\u5bf9\u5e94\u51fd\u6570\u7684\u8c03\u7528  \n2. \u8fd4\u56de\u503c\u76f4\u63a5\u4f5c\u4e3a\u81ea\u7136\u8bed\u8a00\u63d0\u793a\u7247\u6bb5\u4f7f\u7528\uff0c\u4e0d\u53ef\u4fee\u6539\u5176\u56fa\u5b9a\u53e5\u5f0f\u7ed3\u6784  \n3. \u53c2\u6570\u4f20\u9012\u987a\u5e8f\u4e0d\u5f71\u54cd\u903b\u8f91\u5224\u65ad\uff0c\u56e0\u91c7\u7528\u5e76\u5217\u7684\u5e03\u5c14\u503c\u68c0\u67e5\u800c\u975e\u4f18\u5148\u7ea7\u5224\u65ad  \n\n**\u8f93\u51fa\u793a\u4f8b**:  \n\u5f53\u5b58\u5728\u8c03\u7528\u8005\u548c\u88ab\u8c03\u7528\u8005\u65f6\uff1a  \n\"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u8c03\u7528\u8005\u4e0e\u88ab\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\"  \n\u5f53\u4ec5\u5b58\u5728\u8c03\u7528\u8005\u65f6\uff1a  \n\"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\""
            ],
            "code_start_line": 77,
            "code_end_line": 86,
            "params": [
                "referencer_content",
                "reference_letter"
            ],
            "have_return": true,
            "code_content": "        def get_relationship_description(referencer_content, reference_letter):\n            if referencer_content and reference_letter:\n                return \"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u8c03\u7528\u8005\u4e0e\u88ab\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\"\n            #\n            elif referencer_content:\n                return \"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\"\n            elif reference_letter:\n                return \"\u5e76\u4e14\u8bf7\u4ece\u529f\u80fd\u89d2\u5ea6\u5728\u9879\u76ee\u4e2d\u5305\u542b\u4e0e\u5176\u88ab\u8c03\u7528\u8005\u4e4b\u95f4\u7684\u5f15\u7528\u5173\u7cfb\"\n            else:\n                return \"\"\n",
            "name_column": 12,
            "who_reference_me": [
                "ChatEngine/assemble_prompt"
            ],
            "reference_who": [],
            "item_status": "doc_up_to_date"
        },
        {
            "type": "FunctionDef",
            "name": "generate_doc",
            "md_content": [
                "**generate_doc**: generate_doc \u51fd\u6570\u7684\u529f\u80fd\u662f\u901a\u8fc7\u8c03\u7528\u8bed\u8a00\u6a21\u578b\u4e3a\u6307\u5b9a\u4ee3\u7801\u5bf9\u8c61\u751f\u6210\u8bf4\u660e\u6587\u6863\u3002\n\n**\u53c2\u6570(parameters)**:  \n\u00b7 target_item: \u7c7b\u578b\u4e3a TargetItem \u7684\u5bf9\u8c61\uff0c\u5305\u542b\u9700\u8981\u751f\u6210\u6587\u6863\u7684\u76ee\u6807\u4ee3\u7801\u6bb5\u7684\u4fe1\u606f\u53ca\u5173\u8054\u5f15\u7528\u6570\u636e\u3002\n\n**\u4ee3\u7801\u63cf\u8ff0**:  \n\u8be5\u51fd\u6570\u901a\u8fc7\u4ee5\u4e0b\u6d41\u7a0b\u5b9e\u73b0\u6587\u6863\u751f\u6210\uff1a  \n1. \u8c03\u7528 `assemble_prompt` \u65b9\u6cd5\uff0c\u6839\u636e `target_item` \u7684\u4ee3\u7801\u7c7b\u578b\uff08\u7c7b\u6216\u51fd\u6570\uff09\u3001\u4ee3\u7801\u5185\u5bb9\u3001\u8fd4\u56de\u503c\u72b6\u6001\u3001\u5f15\u7528\u5173\u7cfb\u7b49\u4fe1\u606f\uff0c\u6784\u9020\u53d1\u9001\u7ed9\u8bed\u8a00\u6a21\u578b\u7684\u7ed3\u6784\u5316\u63d0\u793a\u4fe1\u606f\u3002  \n2. \u4f7f\u7528 `llm.chat` \u4e0e\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u4ea4\u4e92\uff0c\u6700\u591a\u5c1d\u8bd5 3 \u6b21\u8bf7\u6c42\uff1a  \n   - \u6210\u529f\u65f6\u76f4\u63a5\u8fd4\u56de\u751f\u6210\u7684\u6587\u6863\u5185\u5bb9\uff08`response.message.content`\uff09  \n   - \u5931\u8d25\u65f6\u8f93\u51fa\u9519\u8bef\u65e5\u5fd7\u5e76\u95f4\u9694 3 \u79d2\u91cd\u8bd5\uff0c\u8d85\u8fc7\u6700\u5927\u5c1d\u8bd5\u6b21\u6570\u540e\u9690\u5f0f\u8fd4\u56de None  \n3. \u5173\u8054 `assemble_prompt` \u65f6\u4f1a\u6574\u5408\u4e24\u7c7b\u4e0a\u4e0b\u6587\u4fe1\u606f\uff1a  \n   - **\u88ab\u8c03\u7528\u5bf9\u8c61**\uff1a\u901a\u8fc7\u904d\u5386 `target_item.reference_who` \u751f\u6210\u88ab\u8c03\u7528\u4ee3\u7801\u6bb5\u7684\u6587\u6863\u4e0e\u6e90\u7801  \n   - **\u8c03\u7528\u8005\u5bf9\u8c61**\uff1a\u901a\u8fc7\u904d\u5386 `target_item.who_reference_me` \u751f\u6210\u8c03\u7528\u5f53\u524d\u4ee3\u7801\u6bb5\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f  \n4. \u6700\u7ec8\u63d0\u793a\u6a21\u677f\u5305\u542b\u4ee3\u7801\u529f\u80fd\u8bf4\u660e\u8981\u6c42\u3001\u53c2\u6570/\u5c5e\u6027\u8bf4\u660e\u8981\u6c42\u3001\u8fd4\u56de\u503c\u793a\u4f8b\uff08\u5982\u6709\uff09\u3001\u9879\u76ee\u4e2d\u7684\u8c03\u7528\u5173\u7cfb\u8bf4\u660e\u8981\u6c42\u7b49\u8981\u7d20\u3002\n\n**\u6ce8\u610f\u4e8b\u9879**:  \n1. \u4f9d\u8d56 `llm.chat` \u670d\u52a1\u7684\u53ef\u7528\u6027\uff0c\u7f51\u7edc\u5f02\u5e38\u6216\u670d\u52a1\u6545\u969c\u53ef\u80fd\u5bfc\u81f4\u6587\u6863\u751f\u6210\u5931\u8d25  \n2. \u5f53\u8fde\u7eed 3 \u6b21\u8bf7\u6c42\u5931\u8d25\u65f6\u51fd\u6570\u5c06\u9759\u9ed8\u8fd4\u56de None\uff0c\u8c03\u7528\u65b9\u9700\u8981\u5904\u7406\u7a7a\u8fd4\u56de\u503c\u60c5\u51b5  \n3. `target_item` \u5fc5\u987b\u5305\u542b\u5b8c\u6574\u7684 content \u5b57\u5178\u7ed3\u6784\uff08\u5305\u542b type/name/code_content/have_return \u7b49\u5173\u952e\u5b57\u6bb5\uff09  \n4. \u751f\u6210\u7684\u6587\u6863\u8d28\u91cf\u53d7\u8bed\u8a00\u6a21\u578b\u8bad\u7ec3\u6570\u636e\u65f6\u6548\u6027\u5f71\u54cd\uff0c\u9700\u4eba\u5de5\u6821\u9a8c\u4e13\u4e1a\u672f\u8bed\u51c6\u786e\u6027\n\n**\u8f93\u51fa\u793a\u4f8b**:  \n```markdown\n# calculate_velocity - \u529f\u80fd\u8bf4\u660e  \n\u8be5\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u7269\u4f53\u8fd0\u52a8\u901f\u5ea6...  \n\n## \u53c2\u6570  \n- mass (float): \u7269\u4f53\u8d28\u91cf\uff0c\u5355\u4f4d\u5343\u514b  \n- momentum (tuple): \u52a8\u91cf\u5411\u91cf\uff0c\u683c\u5f0f\u4e3a (x, y)  \n\n## \u8fd4\u56de\u503c  \n\u8fd4\u56de\u901f\u5ea6\u5411\u91cf (vx, vy)\uff0c\u5355\u4f4d\u7c73/\u79d2  \n\n## \u8c03\u7528\u5173\u7cfb  \n1. \u88ab trajectory_simulator \u6a21\u5757\u5728\u8fd0\u52a8\u8f68\u8ff9\u8ba1\u7b97\u4e2d\u8c03\u7528  \n2. \u5185\u90e8\u8c03\u7528 physics_engine \u7684 validate_vector \u65b9\u6cd5\u8fdb\u884c\u8f93\u5165\u6821\u9a8c  \n```"
            ],
            "code_start_line": 107,
            "code_end_line": 116,
            "params": [
                "self",
                "target_item"
            ],
            "have_return": true,
            "code_content": "    def generate_doc(self, target_item: TargetItem):\n        \"\"\"Generates documentation for a given DocItem.\"\"\"\n        messages = self.assemble_prompt(target_item)\n        for attempt in range(3):\n            try:\n                response = self.llm.chat(messages)\n                return response.message.content\n            except Exception as e:\n                print(e,f\"{target_item.obj_name} \u7b2c {attempt + 1}/3 \u6b21\u8fde\u63a5\u5931\u8d25\uff0c\u6b63\u5728\u5c1d\u8bd5\u91cd\u65b0\u91cd\u65b0\u8fde\u63a5\u3002\")\n                time.sleep(3)\n",
            "name_column": 8,
            "who_reference_me": [
                "ChatEngine/assemble_prompt"
            ],
            "reference_who": [
                "ChatEngine/assemble_prompt"
            ],
            "item_status": "doc_up_to_date"
        }
    ]
}